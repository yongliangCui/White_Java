# This is a basic workflow to help you get started with Actions

name: Whiter Docker CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#       安装JDK环境，并使用maven命令编译打包仓库代码
      - name: Set up JDK 8
        uses: actions/setup-java@v3.3.0
        with:
          java-version: 8.x
          distribution: adopt
      - name: Build
        run: mvn package -Dmaven.test.skip=true
        
        
#      登录并安装docker环境
      - name: Login docker
        uses: docker/login-action@v2.0.0
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  
          
          
      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0
      
        
#      生成docker镜像并推送到远程仓库
      - name: push to dockerhub
        id: docker_build
        uses: docker/build-push-action@v3.0.0
        with: 
          context: ./
          file: ./Dockerfile
          push: true
          tags: 425274609/white_java:latest
          
#     使用ssh链接，远程操作云服务器拉取docker镜像，运行docker镜像生成容器。
      - name: pull image && restart container
        uses: fifsky/ssh-action@v0.0.6
        with:
          command: |
            docker pull 425274609/white_java:latest
            docker rm -f containerName||true&&docker run  --name=white_java -d -p 8443:8443 425274609/white_java:latest 
            docker image prune -af
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY}}
          pass: ${{ secrets.PASSWORD }}
          
          
          
          
          
          
